{"remainingRequest":"E:\\vueDome\\vue_Component\\node_modules\\_babel-loader@8.0.6@babel-loader\\lib\\index.js!E:\\vueDome\\vue_Component\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\vueDome\\vue_Component\\node_modules\\_vue-loader@15.8.3@vue-loader\\lib\\index.js??vue-loader-options!E:\\vueDome\\vue_Component\\src\\components\\easy-cron\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueDome\\vue_Component\\src\\components\\easy-cron\\index.vue","mtime":1576919380920},{"path":"E:\\vueDome\\vue_Component\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueDome\\vue_Component\\node_modules\\_babel-loader@8.0.6@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueDome\\vue_Component\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueDome\\vue_Component\\node_modules\\_vue-loader@15.8.3@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SecondUi from \"./tabs/second\";\nimport MinuteUi from \"./tabs/minute\";\nimport HourUi from \"./tabs/hour\";\nimport DayUi from \"./tabs/day\";\nimport WeekUi from \"./tabs/week\";\nimport MonthUi from \"./tabs/month\";\nimport YearUi from \"./tabs/year\";\nimport CronParser from 'cron-parser';\nimport dateFormat from \"./format-date\";\nimport { debounce } from 'debounce';\nexport default {\n  name: 'easy-cron',\n  model: {\n    prop: 'cronValue',\n    event: 'change'\n  },\n  props: {\n    cronValue: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    exeStartTime: {\n      type: [Number, String, Object],\n      default: 0\n    },\n    hideSecond: {\n      type: Boolean,\n      default: false\n    },\n    hideYear: {\n      type: Boolean,\n      default: false\n    },\n    remote: {\n      type: Function,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      curtab: this.hideSecond ? 'minute' : 'second',\n      second: '*',\n      minute: '*',\n      hour: '*',\n      day: '*',\n      month: '*',\n      week: '?',\n      year: '*',\n      startTime: new Date(),\n      preTimeList: '执行预览，会忽略年份参数',\n      columns: [{\n        title: ' ',\n        width: '80',\n        key: 'name'\n      }, {\n        title: ' ',\n        key: 'value'\n      }]\n    };\n  },\n  computed: {\n    tableData: function tableData() {\n      var c = this.hideSecond ? [] : [{\n        name: '秒',\n        value: this.second\n      }];\n      c = c.concat([{\n        name: '分',\n        value: this.minute\n      }, {\n        name: '时',\n        value: this.hour\n      }, {\n        name: '日',\n        value: this.day\n      }, {\n        name: '月',\n        value: this.month\n      }, {\n        name: '周',\n        value: this.week\n      }]);\n      return this.hideSecond || this.hideYear ? c.concat({\n        name: '表达式',\n        value: this.cronValue_c\n      }) : c.concat({\n        name: '年',\n        value: this.year\n      }, {\n        name: '表达式',\n        value: this.cronValue_c\n      }, {\n        name: '表达式(不含年)',\n        value: this.cronValue_c2\n      });\n    },\n    cronValue_c: function cronValue_c() {\n      var result = [];\n      if (!this.hideSecond) result.push(this.second ? this.second : '*');\n      result.push(this.minute ? this.minute : '*');\n      result.push(this.hour ? this.hour : '*');\n      result.push(this.day ? this.day : '*');\n      result.push(this.month ? this.month : '*');\n      result.push(this.week ? this.week : '?');\n      if (!this.hideYear && !this.hideSecond) result.push(this.year ? this.year : '*');\n      return result.join(' ');\n    },\n    cronValue_c2: function cronValue_c2() {\n      var v = this.cronValue_c;\n      if (this.hideYear || this.hideSecond) return v;\n      var vs = v.split(' ');\n      return vs.slice(0, vs.length - 1).join(' ');\n    }\n  },\n  watch: {\n    cronValue: function cronValue(newVal, oldVal) {\n      if (newVal === this.cronValue_c) {\n        // console.info('same cron value: ' + newVal)\n        return;\n      }\n\n      this.formatValue();\n    },\n    cronValue_c: function cronValue_c(newVal, oldVal) {\n      this.calTriggerList();\n      this.$emit('change', newVal);\n    },\n    exeStartTime: function exeStartTime(newVal, oldVal) {\n      this.calStartTime();\n    },\n    startTime: function startTime(newVal, oldVal) {\n      this.calTriggerList();\n    }\n  },\n  methods: {\n    formatValue: function formatValue() {\n      console.info(this.cronValue);\n      if (!this.cronValue) return;\n      var values = this.cronValue.split(' ').filter(function (item) {\n        return !!item;\n      });\n      if (!values || values.length <= 0) return;\n      var i = 0;\n      if (!this.hideSecond) this.second = values[i++];\n      if (values.length > i) this.minute = values[i++];\n      if (values.length > i) this.hour = values[i++];\n      if (values.length > i) this.day = values[i++];\n      if (values.length > i) this.month = values[i++];\n      if (values.length > i) this.week = values[i++];\n      if (values.length > i) this.year = values[i];\n    },\n    calTriggerList: debounce(function () {\n      this.calTriggerListInner();\n    }, 500),\n    calTriggerListInner: function calTriggerListInner() {\n      var _this = this;\n\n      // 设置了回调函数\n      if (this.remote) {\n        this.remote(this.cronValue_c2, +this.startTime, function (v) {\n          _this.preTimeList = v;\n        });\n        return;\n      } // 去掉年份参数\n\n\n      var e = this.cronValue_c2; // console.info('>>>>>>' + e)\n\n      var format = 'yyyy-MM-dd hh:mm:ss';\n      var options = {\n        currentDate: dateFormat(this.startTime, format)\n      }; // console.info(options)\n\n      var iter = CronParser.parseExpression(e, options);\n      var result = [];\n\n      for (var i = 0; i < 5; i++) {\n        result.push(dateFormat(new Date(iter.next()), format));\n      }\n\n      this.preTimeList = result.length > 0 ? result.join('\\n') : '无执行时间';\n    },\n    calStartTime: function calStartTime() {\n      if (!this.exeStartTime) {\n        this.startTime = new Date();\n        return;\n      }\n\n      try {\n        this.startTime = new Date(this.exeStartTime);\n      } catch (e) {\n        this.startTime = new Date();\n      }\n    }\n  },\n  components: {\n    SecondUi: SecondUi,\n    MinuteUi: MinuteUi,\n    HourUi: HourUi,\n    DayUi: DayUi,\n    WeekUi: WeekUi,\n    MonthUi: MonthUi,\n    YearUi: YearUi\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.formatValue();\n    this.calStartTime();\n    this.$nextTick(function () {\n      _this2.calTriggerListInner();\n    });\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <Card class=\"easy-cron\">\r\n    <div class=\"content\">\r\n      <div class=\"left\">\r\n        <Tabs size=\"small\" v-model=\"curtab\">\r\n          <TabPane label=\"秒\" name=\"second\" v-if=\"!hideSecond\"><second-ui v-model=\"second\" :disabled=\"disabled\"></second-ui></TabPane>\r\n          <TabPane label=\"分\" name=\"minute\"><minute-ui v-model=\"minute\" :disabled=\"disabled\"></minute-ui></TabPane>\r\n          <TabPane label=\"时\" name=\"hour\"><hour-ui v-model=\"hour\" :disabled=\"disabled\"></hour-ui></TabPane>\r\n          <TabPane label=\"日\" name=\"day\"><day-ui v-model=\"day\" :week=\"week\" :disabled=\"disabled\"></day-ui></TabPane>\r\n          <TabPane label=\"月\" name=\"month\"><month-ui v-model=\"month\" :disabled=\"disabled\"></month-ui></TabPane>\r\n          <TabPane label=\"周\" name=\"week\"><week-ui v-model=\"week\" :day=\"day\" :disabled=\"disabled\"></week-ui></TabPane>\r\n          <TabPane label=\"年\" name=\"year\" v-if=\"!hideYear && !hideSecond\"><year-ui v-model=\"year\" :disabled=\"disabled\"></year-ui></TabPane>\r\n        </Tabs>\r\n      </div>\r\n      <div class=\"right_top\">\r\n        <p>Cron表达式</p>\r\n        <p>{{cronValue_c}}</p>\r\n      </div>\r\n      <!-- <div class=\"right\"> -->\r\n        \r\n        <!-- <div class=\"field-list\"><Table stripe :columns=\"columns\" :data=\"tableData\"\r\n          :show-header=\"false\" size=\"small\"></Table></div>\r\n        <div class=\"exe-pre\">\r\n          <div class=\"exe-pre-panel\">\r\n            <label class=\"p-left\">执行时间</label>\r\n            <DatePicker type=\"datetime\" v-model=\"startTime\" class=\"p-right\"\r\n              placeholder=\"选择执行开始时间\"></DatePicker>\r\n          </div>\r\n          <div class=\"exe-pre-panel\">\r\n            <Tooltip content=\"执行预览解析不含年参数\" class=\"p-left\">\r\n              <label>执行预览</label>\r\n            </Tooltip>\r\n            <Input type=\"textarea\" :value=\"preTimeList\" class=\"p-right\" :rows=\"4\" readonly />\r\n          </div>\r\n        </div> -->\r\n      <!-- </div> -->\r\n    </div>\r\n  </Card>\r\n</template>\r\n\r\n<script>\r\nimport SecondUi from './tabs/second'\r\nimport MinuteUi from './tabs/minute'\r\nimport HourUi from './tabs/hour'\r\nimport DayUi from './tabs/day'\r\nimport WeekUi from './tabs/week'\r\nimport MonthUi from './tabs/month'\r\nimport YearUi from './tabs/year'\r\nimport CronParser from 'cron-parser'\r\nimport dateFormat from './format-date'\r\nimport { debounce } from 'debounce'\r\n\r\nexport default {\r\n  name: 'easy-cron',\r\n  model: {\r\n    prop: 'cronValue',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    cronValue: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    exeStartTime: {\r\n      type: [Number, String, Object],\r\n      default: 0\r\n    },\r\n    hideSecond: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    hideYear: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    remote: {\r\n      type: Function,\r\n      default: null\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      curtab: this.hideSecond ? 'minute' : 'second',\r\n      second: '*',\r\n      minute: '*',\r\n      hour: '*',\r\n      day: '*',\r\n      month: '*',\r\n      week: '?',\r\n      year: '*',\r\n      startTime: new Date(),\r\n      preTimeList: '执行预览，会忽略年份参数',\r\n      columns: [{ title: ' ', width: '80', key: 'name' }, { title: ' ', key: 'value' }]\r\n    }\r\n  },\r\n  computed: {\r\n    tableData () {\r\n      let c = this.hideSecond ? [] : [{ name: '秒', value: this.second }]\r\n      c = c.concat([\r\n        { name: '分', value: this.minute },\r\n        { name: '时', value: this.hour },\r\n        { name: '日', value: this.day },\r\n        { name: '月', value: this.month },\r\n        { name: '周', value: this.week }\r\n      ])\r\n      return (this.hideSecond || this.hideYear) ? c.concat({ name: '表达式', value: this.cronValue_c })\r\n        : c.concat(\r\n          { name: '年', value: this.year },\r\n          { name: '表达式', value: this.cronValue_c },\r\n          { name: '表达式(不含年)', value: this.cronValue_c2 }\r\n        )\r\n    },\r\n    cronValue_c () {\r\n      let result = []\r\n      if (!this.hideSecond) result.push(this.second ? this.second : '*')\r\n      result.push(this.minute ? this.minute : '*')\r\n      result.push(this.hour ? this.hour : '*')\r\n      result.push(this.day ? this.day : '*')\r\n      result.push(this.month ? this.month : '*')\r\n      result.push(this.week ? this.week : '?')\r\n      if (!this.hideYear && !this.hideSecond) result.push(this.year ? this.year : '*')\r\n      return result.join(' ')\r\n    },\r\n    cronValue_c2 () {\r\n      const v = this.cronValue_c\r\n      if (this.hideYear || this.hideSecond) return v\r\n      const vs = v.split(' ')\r\n      return vs.slice(0, vs.length - 1).join(' ')\r\n    }\r\n  },\r\n  watch: {\r\n    cronValue (newVal, oldVal) {\r\n      if (newVal === this.cronValue_c) {\r\n        // console.info('same cron value: ' + newVal)\r\n        return\r\n      }\r\n      this.formatValue()\r\n    },\r\n    cronValue_c (newVal, oldVal) {\r\n      this.calTriggerList()\r\n      this.$emit('change', newVal)\r\n    },\r\n    exeStartTime (newVal, oldVal) {\r\n      this.calStartTime()\r\n    },\r\n    startTime (newVal, oldVal) {\r\n      this.calTriggerList()\r\n    }\r\n  },\r\n  methods: {\r\n    formatValue () {\r\n      console.info(this.cronValue)\r\n      if (!this.cronValue) return\r\n      const values = this.cronValue.split(' ').filter(item => !!item)\r\n      if (!values || values.length <= 0) return\r\n      let i = 0\r\n      if (!this.hideSecond) this.second = values[i++]\r\n      if (values.length > i) this.minute = values[i++]\r\n      if (values.length > i) this.hour = values[i++]\r\n      if (values.length > i) this.day = values[i++]\r\n      if (values.length > i) this.month = values[i++]\r\n      if (values.length > i) this.week = values[i++]\r\n      if (values.length > i) this.year = values[i]\r\n    },\r\n    calTriggerList: debounce(function () {\r\n      this.calTriggerListInner()\r\n    }, 500),\r\n    calTriggerListInner () {\r\n      // 设置了回调函数\r\n      if (this.remote) {\r\n        this.remote(this.cronValue_c2, +this.startTime, v => { this.preTimeList = v })\r\n        return\r\n      }\r\n      // 去掉年份参数\r\n      const e = this.cronValue_c2\r\n      // console.info('>>>>>>' + e)\r\n      const format = 'yyyy-MM-dd hh:mm:ss'\r\n      const options = {\r\n        currentDate: dateFormat(this.startTime, format)\r\n      }\r\n      // console.info(options)\r\n      const iter = CronParser.parseExpression(e, options)\r\n      const result = []\r\n      for (let i = 0; i < 5; i++) {\r\n        result.push(dateFormat(new Date(iter.next()), format))\r\n      }\r\n      this.preTimeList = result.length > 0 ? result.join('\\n') : '无执行时间'\r\n    },\r\n    calStartTime () {\r\n      if (!this.exeStartTime) {\r\n        this.startTime = new Date()\r\n        return\r\n      }\r\n      try {\r\n        this.startTime = new Date(this.exeStartTime)\r\n      } catch (e) {\r\n        this.startTime = new Date()\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    SecondUi,\r\n    MinuteUi,\r\n    HourUi,\r\n    DayUi,\r\n    WeekUi,\r\n    MonthUi,\r\n    YearUi\r\n  },\r\n  created () {\r\n    this.formatValue()\r\n    this.calStartTime()\r\n    this.$nextTick(() => {\r\n      this.calTriggerListInner()\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.easy-cron {\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n.content {\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  position: relative;\r\n}\r\n.right_top{\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n}\r\n.right_top p{\r\n  text-align: center;\r\n}\r\n.right_top p{\r\n  color: aqua;\r\n}\r\n.left {\r\n  flex-basis: 60%;\r\n  width: 100%;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.right {\r\n  flex-basis: 40%;\r\n}\r\n\r\n.ivu-table-small td {\r\n  height: 30px !important;\r\n}\r\n\r\n.exe-pre {\r\n  margin-top: 5px;\r\n}\r\n\r\n.exe-pre > div {\r\n  margin-top: 5px;\r\n}\r\n\r\n.exe-pre-panel {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.exe-pre-panel .p-left {\r\n  flex-basis: 80px;\r\n  flex-grow: 0;\r\n}\r\n\r\n.exe-pre-panel .p-right {\r\n  flex-basis: 100px;\r\n  flex-grow: 1;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/easy-cron"}]}